---
import Layout from "@layouts/Layout.astro";
import { formatAlbum } from "@utils/format";
import { paths } from "@utils/paths";
import { minLength, object, safeParseAsync, string } from "valibot";
import AlbumHero from "@modules/albums/AlbumHero/AlbumHero.astro";
import { actions } from "astro:actions";
import { findReview } from "@server/reviews";
import EditReviewForm from "@modules/reviews/EditReviewForm/EditReviewForm.astro";

const session = Astro.locals.session;

if (!session) {
  return Astro.redirect(paths.login);
}

const parseResult = await safeParseAsync(
  object({ id: string([minLength(1)]) }),
  Astro.params,
);
if (!parseResult.success) {
  return Astro.redirect(paths.error);
}

const reviewRow = await findReview({
  reviewId: parseResult.output.id,
});

if (!reviewRow) {
  return Astro.redirect(paths.notFound);
}

const { Album: album, Artist: artist, Review: review } = reviewRow;

const actionResult = Astro.getActionResult(actions.updateReview);
if (actionResult?.data?.success) {
  return Astro.redirect(paths.album(album.id));
}

const header = formatAlbum({ album, artist });
---

<Layout title={`${header} - Astro Albums`} userId={session.userId}>
  <main class="p-4 flex flex-col gap-4">
    <h2 class="text-xl font-bold">Album</h2>
    <AlbumHero artist={artist} album={album} />
    <h2 class="text-xl font-bold">Edit Review</h2>
    <EditReviewForm review={review} />
  </main>
</Layout>
