---
import Layout from "@layouts/Layout.astro";
import AlbumHero from "@modules/albums/AlbumHero.astro";
import CreateReviewForm from "@modules/reviews/ReviewForms/CreateReviewForm.astro";
import { findAlbum } from "@server/data/albums";
import { formatAlbum } from "@utils/format";
import { paths } from "@utils/paths";
import { z } from "astro/zod";
import { actions } from "astro:actions";

const session = Astro.locals.session;

paths;
if (!session) {
  return Astro.redirect(paths.login);
}

const parseResult = await z
  .object({ id: z.string().min(1) })
  .safeParseAsync(Astro.params);

if (!parseResult.success) {
  return Astro.redirect(paths.error);
}

const actionResult = Astro.getActionResult(actions.createReview);
if (actionResult?.data?.success) {
  return Astro.redirect(paths.album(parseResult.data.id));
}

const albumRow = await findAlbum({
  albumId: parseResult.data.id,
});

if (!albumRow) {
  return Astro.redirect(paths.notFound);
}

const { Album: album, Artist: artist, Reminder: reminder } = albumRow;

const header = formatAlbum({ album, artist });
---

<Layout title={`${header} - Astro Albums`} userId={session.userId}>
  <main class="p-4 flex flex-col gap-4">
    <h2 class="text-xl font-bold">Album</h2>
    <AlbumHero artist={artist} album={album} reminder={reminder} />
    <h2 class="text-xl font-bold">Review</h2>
    <CreateReviewForm album={album} />
  </main>
</Layout>
