---
import { formatAlbum } from "@utils/format";
import { paths } from "@utils/paths";
import { AddReviewButton } from "./AddReviewButton/AddReviewButton";
import { EditAlbumButton } from "./EditAlbumButton/EditAlbumButton";
import { DeleteAlbumButton } from "./DeleteAlbumButton/DeleteAlbumButton";
import { YtButton } from "@modules/common/YtButton/YtButton";
import { GoogleButton } from "@modules/common/GoogleButton/GoogleButton";
import type { Album, Artist } from "astro:db";
import Link from "@components/Link/Link.astro";

export interface Props {
  album: typeof Album.$inferSelect;
  artist: typeof Artist.$inferSelect;
  deleteRedirect?: string;
}

const { album, artist, deleteRedirect } = Astro.props;

const details =
  album.release || (album.sid && paths.albumRelease({ sid: album.sid }));

const header = formatAlbum({ album, artist });
---

<div class="card-actions gap-1">
  <YtButton client:load title={album.title} name={artist.name} />
  <GoogleButton client:load title={album.title} name={artist.name} />
  <Link size="xs" href={paths.album({ id: album.id })}>Show more</Link>
  {
    details && (
      <Link size="xs" href={details}>
        Details
      </Link>
    )
  }
  <AddReviewButton client:load albumId={album.id} header={header} />
  <EditAlbumButton
    client:load
    albumId={album.id}
    header={header}
    title={album.title}
    year={album.year}
  />
  <DeleteAlbumButton
    client:load
    albumId={album.id}
    header={header}
    redirect={deleteRedirect}
  />
</div>
