---
import { Alert, AlertIcon } from "@components/Alert/Alert";
import TextFieldErrorMessage from "@components/TextField/TextFieldErrorMessage.astro";
import TextFieldInput from "@components/TextField/TextFieldInput.astro";
import TextFieldLabel from "@components/TextField/TextFieldLabel.astro";
import TextFieldLabelText from "@components/TextField/TextFieldLabelText.astro";
import TextFieldRoot from "@components/TextField/TextFieldRoot.astro";

type FormFields = {
  title: string;
  year: number | null;
};

type FormErrors = Partial<Record<keyof FormFields, string[]>>;

export type Props = {
  initial?: FormFields;
  error?: string | null;
  errors?: FormErrors | null;
};

const { initial, error, errors } = Astro.props;
---

<div class="w-full flex flex-col gap-2">
  {
    error ? (
      <Alert variant="error">
        <AlertIcon variant="error" />
        {error}
      </Alert>
    ) : null
  }
  <TextFieldRoot>
    <TextFieldLabel for="title">
      <TextFieldLabelText>Title:</TextFieldLabelText>
    </TextFieldLabel>
    <TextFieldInput
      id="title"
      size="sm"
      required
      name="title"
      placeholder="Title"
      type="text"
      value={initial?.title ?? ""}
      variant="bordered"
    />
    {
      errors?.title?.map((error) => (
        <TextFieldErrorMessage>{error}</TextFieldErrorMessage>
      ))
    }
  </TextFieldRoot>
  <TextFieldRoot>
    <TextFieldLabel for="year">
      <TextFieldLabelText>Year:</TextFieldLabelText>
    </TextFieldLabel>
    <TextFieldInput
      id="year"
      name="year"
      max={2100}
      min={0}
      placeholder="Year"
      step={1}
      type="number"
      value={initial?.year}
      size="sm"
      variant="bordered"
    />
    {
      errors?.year?.map((error) => (
        <TextFieldErrorMessage>{error}</TextFieldErrorMessage>
      ))
    }
  </TextFieldRoot>
</div>
