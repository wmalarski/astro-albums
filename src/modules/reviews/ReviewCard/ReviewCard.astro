---
import { formatAlbum } from "@utils/format";
import { jsonToCoversField } from "@server/coverArt";
import { paths } from "@utils/paths";
import { EditReviewButton } from "./EditReviewButton/EditReviewButton";
import { DeleteReviewButton } from "./DeleteReviewButton/DeleteReviewButton";
import CoversCarousel from "@modules/common/CoversCarousel/CoversCarousel.astro";
import { YtButton } from "@modules/common/YtButton/YtButton";
import { GoogleButton } from "@modules/common/GoogleButton/GoogleButton";
import type { Album, Artist, Review } from "astro:db";
import Link from "@components/Link/Link.astro";

export interface Props {
  review: typeof Review.$inferSelect;
  album: typeof Album.$inferSelect;
  artist: typeof Artist.$inferSelect;
}

const { album, artist, review } = Astro.props;

const details =
  album.release || (album.sid && paths.albumRelease({ sid: album.sid }));

const header = formatAlbum({ album, artist });

const covers = jsonToCoversField(album.covers);
---

<article class="card card-side card-compact bg-base-300 w-full h-60">
  <figure class="max-w-[250px]">
    <CoversCarousel header={header} covers={covers.small} />
  </figure>
  <div class="card-body flex flex-col gap-2">
    <h3 class="card-title line-clamp-2">{header}</h3>
    <div class="flex gap-2">
      <span class="font-semibold">Date:</span>
      <span>{new Intl.DateTimeFormat().format(review.createdAt)}</span>
    </div>
    <div class="flex gap-2">
      <span class="font-semibold">Rate:</span>
      <span>{review.rate}</span>
    </div>
    <div class="card-actions gap-1">
      <YtButton client:load title={album.title} name={artist.name} />
      <GoogleButton client:load title={album.title} name={artist.name} />
      <Link size="xs" href={paths.album(album.id)}>Show more</Link>
      {
        details && (
          <Link size="xs" href={details}>
            Details
          </Link>
        )
      }
      <Link size="xs" href={paths.editReview(review.id)}>Edit</Link>
      <EditReviewButton
        client:load
        reviewId={review.id}
        header={header}
        text={review.text}
        rate={review.rate}
      />
      <DeleteReviewButton client:load reviewId={review.id} header={header} />
    </div>
  </div>
</article>
