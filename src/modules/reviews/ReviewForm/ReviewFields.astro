---
import { AlertIcon } from "@components/Alert/Alert";
import { Alert } from "@components/Alert/Alert";
import {
  TextFieldInput,
  TextFieldLabel,
  TextFieldLabelText,
  TextFieldRoot,
} from "@components/TextField/TextField";
import TextFieldErrorMessage from "@components/TextField/TextFieldErrorMessage.astro";

type FormFields = {
  text: string;
  rate: number;
};

type FormErrors = Partial<Record<keyof FormFields, string[]>>;

export type Props = {
  initial?: FormFields;
  error?: string | null;
  errors?: FormErrors | null;
};

const { initial, error, errors } = Astro.props;
---

<div class="w-full flex flex-col gap-2">
  {
    error ? (
      <Alert variant="error">
        <AlertIcon variant="error" />
        {error}
      </Alert>
    ) : null
  }
  <TextFieldRoot>
    <TextFieldLabel for="review">
      <TextFieldLabelText>Review:</TextFieldLabelText>
    </TextFieldLabel>
    <TextFieldInput
      required
      size="sm"
      id="review"
      name="text"
      placeholder="Review"
      type="text"
      value={initial?.text ?? ""}
      variant="bordered"
    />
    {
      errors?.text?.map((error) => (
        <TextFieldErrorMessage>{error}</TextFieldErrorMessage>
      ))
    }
    <TextFieldRoot>
      <TextFieldLabel for="rate">
        <TextFieldLabelText>Rate:</TextFieldLabelText>
      </TextFieldLabel>
      <TextFieldInput
        size="sm"
        id="rate"
        name="rate"
        max={10}
        min={0}
        placeholder="Rate"
        step={0.1}
        type="number"
        value={initial?.rate ?? 5}
        variant="bordered"
        required
      />
      {
        errors?.rate?.map((error) => (
          <TextFieldErrorMessage>{error}</TextFieldErrorMessage>
        ))
      }
    </TextFieldRoot>
  </TextFieldRoot>
</div>
